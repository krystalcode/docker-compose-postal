version: '2.4'

services:

  postal_web:
    # Build.
    image: ghcr.io/postalserver/postal:${APP_CONTAINER_POSTAL_VERSION}

    # Run.
    command: postal web-server
    container_name: ${APP_ID}_postal_web

    restart: unless-stopped

    # Configure:
    depends_on:
      - mysql

    links:
      - mysql:mysql

    networks:
      - backend
      - frontend

    volumes:
      - ${DOCKER_COMPOSE_VOLUMES_DIR}/${APP_VOLUMES_DIR}/postal/config:/config

  caddy:
    # Build.
    image: docker.io/caddy:${APP_CONTAINER_CADDY_VERSION}

    # Run.
    container_name: ${APP_ID}_caddy

    restart: unless-stopped

    # Configure.
    depends_on:
      - postal_web

    links:
      - postal_web:postal

    environment:
      - VIRTUAL_HOST=${APP_VIRTUAL_HOST}
      - VIRTUAL_PORT=80
      - VIRTUAL_NETWORK=nginx-proxy
      - LETSENCRYPT_HOST=${APP_LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${APP_LETSENCRYPT_EMAIL}

    networks:
      - frontend
      - proxy-tier

    volumes:
      - ${DOCKER_COMPOSE_VOLUMES_DIR}/${APP_VOLUMES_DIR}/caddy/config/Caddyfile:/etc/caddy/Caddyfile:ro
      - ${DOCKER_COMPOSE_VOLUMES_DIR}/${APP_VOLUMES_DIR}/caddy/data:/data

  mysql:
    # Build.
    image: percona:${APP_CONTAINER_MYSQL_VERSION}

    # Run.
    command: --max_allowed_packet=64M --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: ${APP_ID}_mysql

    restart: unless-stopped

    # Configure.
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=${APP_MYSQL_ALLOW_EMPTY_PASSWORD}
      - MYSQL_USER=${APP_MYSQL_USER}
      - MYSQL_PASSWORD=${APP_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${APP_MYSQL_DATABASE}

    networks:
      - backend

    volumes:
      - ${DOCKER_COMPOSE_VOLUMES_DIR}/${APP_VOLUMES_DIR}/mysql/data:/var/lib/mysql
      - ${DOCKER_COMPOSE_VOLUMES_DIR}/${APP_VOLUMES_DIR}/mysql/config/postal.cnf:/etc/percona-server.conf.d/postal.cnf

  rabbitmq:
    # Build.
    image: docker.io/rabbitmq:${APP_CONTAINER_RABBITMQ_VERSION}

    # Run.
    container_name: ${APP_ID}_rabbitmq

    restart: unless-stopped

    # Configure.
    environment:
      - RABBITMQ_DEFAULT_USER=${APP_RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${APP_RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${APP_RABBITMQ_DEFAULT_VHOST}

    networks:
      - backend

    volumes:
      - ${DOCKER_COMPOSE_VOLUMES_DIR}/${APP_VOLUMES_DIR}/rabbitmq:/var/lib/rabbitmq

networks:
  backend:
  frontend:

  proxy-tier:
    external:
      name: nginx-proxy
